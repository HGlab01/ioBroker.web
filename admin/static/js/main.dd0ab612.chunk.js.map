{"version":3,"sources":["Components/CustomSelect.js","Components/CustomInput.js","Components/CustomCheckbox.js","Components/CustomModal.js","Components/Toast.js","Tabs/Options.js","Components/HintComponent.js","assets/le.png","Tabs/Certificates.js","Tabs/WhiteList.js","Components/CustomButtonUpload.js","Tabs/Background.js","Tabs/Additionally.js","App.js","serviceWorker.js","index.js"],"names":["CustomSelect","table","value","title","attr","options","style","classes","native","onChange","className","FormControl","clsx","input","controlElement","Object","assign","paddingTop","Select","e","target","Input","name","id","map","item","MenuItem","I18n","t","FormHelperText","defaultProps","withStyles","theme","minWidth","inputNumber","CustomInput","styleComponentBlock","component","size","variant","type","TextField","error","helperText","heightInput","margin","marginTop","height","CustomCheckbox","checked","FormControlLabel","control","Checkbox","el","color","label","useStyles","makeStyles","modalContentWrapper","padding","overflowX","modalButtonBlock","display","justifyContent","flexFlow","borderTop","modalButtonBlockTwo","modalWrapper","position","background","close","right","top","width","opacity","cursor","transition","transform","left","content","backgroundColor","CustomModal","open","children","titleButton","titleButton2","buttonClick","Dialog","maxWidth","disableEscapeKeyDown","onClose","aria-labelledby","aria-describedby","onClick","Button","Toast","message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","action","IconButton","aria-label","Options","Component","constructor","props","super","this","state","toast","ipAddressOptions","certificatesOptions","usersOptions","socketioOptions","openModal","componentDidMount","instance","socket","host","common","getAdapterInstances","then","setState","_id","getRawSocket","emit","err","data","IPs4","family","IPs6","hardware","networkInterfaces","eth","hasOwnProperty","num","length","push","address","i","getCertificates","list","getUsers","componentDidUpdate","prevProps","auth","secure","defaultUser","whiteListSettings","default","user","render","onLoad","newCommon","JSON","parse","stringify","icon","extIcon","tab","blockWarning","blockWarningContent","undefined","onError","text","errorText","column","columnSettings","ipInputStyle","blockWrapperCheckbox","blockWrapper","displayNone","filter","marginRight","replace","flexDirection","minHeight","verticalAlign","fontSize","marginBottom","alignItems","colorTheme","HintComponent","openLink","useState","setOpen","ClickAwayListener","onClickAway","Tooltip","arrow","placement","interactive","onOpen","Fab","boxShadow","marginLeft","Certificates","readme","logoWidth","alt","src","logo","window","baseObj","object","read","write","delete","create","file","WhiteList","tableSelect","optionsSelect","miniTableSelect","newObj","tableInput","copyObj","keys","forEach","keyObj","validateIp","buttonAdd","number","newKey","addProperty","find","keySearch","buttonRemove","ip","indexOf","lastIndexOf","test","tableHeadArr","TableContainer","Paper","Table","maxTable","TableHead","TableRow","TableCell","align","rowSpan","fontWeight","colSpan","index","TableBody","backgroundTheme","borderBottom","elProperty","indexProperty","Boolean","checkBoxStyle","miniTable","zIndex","card","lineHeight","textAlign","element","indexEl","newTableHeadArr","splice","elhed","ind","button","border","borderRadius","root","spacing","CustomButtonUpload","valueFileUpload","setValueFileUpload","accept","multiple","files","dataTransfer","htmlFor","Background","imgSRC","readFile","arrayBufferView","Uint8Array","blob","Blob","URL","webkitURL","createObjectURL","Date","now","uploadFile","callback","reader","FileReader","onload","result","readAsArrayBuffer","a","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","dropZone","dropZoneActive","imgStyle","fontFamily","outline","maxHeight","Additionally","arrayTabName","translate","App","GenericApp","extendedProps","encryptedFields","translations","require","getSelectedTab","selectedTab","onPrepareSave","settings","certPublic","certPrivate","renderTab","toString","updateNativeValue","adapterName","checkDisabledTabs","nameTab","loaded","themeType","palette","primary","AppBar","Tabs","selectTab","scrollButtons","Tab","disabled","data-name","isIFrame","tabContentIFrame","tabContent","renderError","renderSaveCloseButtons","overflow","location","hostname","match","themeName","Utils","getThemeName","console","log","version","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd0ab612.chunk.js","sourcesContent":["import { FormControl, FormHelperText, Input, MenuItem, Select, withStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst styles = theme => ({\r\n    input: {\r\n        minWidth: 300\r\n    },\r\n    inputNumber: {\r\n        minWidth: 150\r\n    }\r\n});\r\n\r\nconst CustomSelect = ({ table, value, title, attr, options, style, classes, native, onChange, className }) => {\r\n    return <FormControl\r\n        className={clsx(classes.input, classes.controlElement, className)}\r\n        style={Object.assign({ paddingTop: 5 }, style)}\r\n    >\r\n        <Select\r\n            value={table ? value : native[attr] || '_'}\r\n            onChange={e => {\r\n                if (table) {\r\n                    onChange(e.target.value);\r\n                } else {\r\n                    onChange(attr, e.target.value === '_' ? '' : e.target.value)\r\n                }\r\n            }\r\n            }\r\n            input={<Input name={attr} id={attr + '-helper'} />}\r\n        >\r\n            {options.map(item => (<MenuItem key={'key-' + item.value} value={item.value || '_'}>{I18n.t(item.title)}</MenuItem>))}\r\n        </Select>\r\n        <FormHelperText>{I18n.t(title)}</FormHelperText>\r\n    </FormControl>;\r\n}\r\n\r\nCustomSelect.defaultProps = {\r\n    value: '',\r\n    className: null,\r\n    table: false\r\n};\r\n\r\nCustomSelect.propTypes = {\r\n    title: PropTypes.string,\r\n    attr: PropTypes.string,\r\n    options: PropTypes.array.isRequired,\r\n    style: PropTypes.object,\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(CustomSelect);","import { FormControl, FormHelperText, TextField, withStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst styles = theme => ({\r\n    input: {\r\n        minWidth: 300\r\n    },\r\n    inputNumber: {\r\n        minWidth: 150\r\n    },\r\n    heightInput: {\r\n        height: 30\r\n    }\r\n});\r\n\r\nconst CustomInput = ({ styleComponentBlock, component, size, variant, table, value, title, attr, type, style, classes, native, onChange, className }) => {\r\n    const error = false;\r\n    return <FormControl\r\n        className={clsx(type === 'number' ? classes.inputNumber : classes.input + ' ' + classes.controlElement, className)}\r\n        style={Object.assign({ paddingTop: 5 }, style)}\r\n    >\r\n        <TextField\r\n            error={!!error}\r\n            variant={variant}\r\n            value={table ? value : native[attr]}\r\n            type={type}\r\n            helperText={error || ''}\r\n            style={style}\r\n            className={classes.heightInput}\r\n            onChange={e => {\r\n                if (table) {\r\n                    onChange(e.target.value);\r\n                } else {\r\n                    onChange(attr, e.target.value);\r\n                }\r\n            }}\r\n            margin=\"normal\"\r\n            size={size}\r\n        />\r\n        <div style={styleComponentBlock}>\r\n            <FormHelperText style={{ marginTop: -3 }}>{I18n.t(title)}</FormHelperText>\r\n            {component}\r\n        </div>\r\n    </FormControl>;\r\n}\r\n\r\nCustomInput.defaultProps = {\r\n    value: '',\r\n    type: 'text',\r\n    className: null,\r\n    table: false,\r\n    native: {},\r\n    variant: 'standard',\r\n    size: 'medium',\r\n    component: null,\r\n    styleComponentBlock: null\r\n};\r\n\r\nCustomInput.propTypes = {\r\n    title: PropTypes.string,\r\n    attr: PropTypes.string,\r\n    type: PropTypes.string,\r\n    style: PropTypes.object,\r\n    native: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n    component: PropTypes.object,\r\n    styleComponentBlock: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles)(CustomInput);","import { Checkbox, FormControlLabel, withStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    input: {\r\n        minWidth: 300\r\n    }\r\n});\r\n\r\nconst CustomCheckbox = ({ title, attr, style, classes, native, onChange, className, table, checked }) => {\r\n    return <FormControlLabel\r\n        key={attr}\r\n        style={Object.assign({ paddingTop: 5 }, style)}\r\n        className={clsx(classes.controlElement, className)}\r\n        control={\r\n            <Checkbox\r\n                checked={table ? checked : native[attr]}\r\n                onChange={el => {\r\n                    if (table) {\r\n                        onChange(el.target.checked);\r\n                    } else {\r\n                        onChange(attr, !native[attr]);\r\n                    }\r\n                }}\r\n                color=\"primary\"\r\n            />\r\n        }\r\n        label={I18n.t(title)}\r\n    />;\r\n}\r\n\r\nCustomCheckbox.defaultProps = {\r\n    table: false,\r\n    className: null\r\n};\r\n\r\nCustomCheckbox.propTypes = {\r\n    title: PropTypes.string,\r\n    attr: PropTypes.string.isRequired,\r\n    style: PropTypes.object,\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    table: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(CustomCheckbox);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modalContentWrapper: {\r\n        margin: '20px 0',\r\n        padding: '0 35px',\r\n        // background: '#f6f6f6',\r\n        overflowX: 'hidden',\r\n        minWidth: '320px'\r\n    },\r\n    modalButtonBlock: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        marginTop: '20px',\r\n        flexFlow: 'wrap',\r\n        borderTop: '1px solid silver'\r\n    },\r\n    modalButtonBlockTwo: {\r\n        justifyContent: 'space-around',\r\n        flexFlow: 'wrap-reverse',\r\n        '& button': {\r\n            margin: '5px'\r\n        }\r\n    },\r\n    modalWrapper: {\r\n        position: 'relative',\r\n        '[class*=\"MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthXl MuiPaper-elevation24 MuiPaper-rounded\"]': {\r\n            background: '#f6f6f6'\r\n        }\r\n    },\r\n    close: {\r\n        position: 'absolute',\r\n        right: '8px',\r\n        top: '6px',\r\n        width: '32px',\r\n        height: '32px',\r\n        opacity: '0.9',\r\n        cursor: 'pointer',\r\n        transition: 'all 0.6s ease',\r\n        '&:hover': {\r\n            transform: 'rotate(90deg)'\r\n        },\r\n        '&:before': {\r\n            position: 'absolute',\r\n            left: '15px',\r\n            content: '\"\"',\r\n            height: '33px',\r\n            width: '4px',\r\n            backgroundColor: '#ff4f4f',\r\n            transform: 'rotate(45deg)'\r\n        },\r\n        '&:after': {\r\n            position: 'absolute',\r\n            left: '15px',\r\n            content: '\"\"',\r\n            height: '33px',\r\n            width: '4px',\r\n            backgroundColor: '#ff4f4f',\r\n            transform: 'rotate(-45deg)'\r\n        },\r\n    },\r\n    '@media screen and (max-width: 460px)': {\r\n        modalContentWrapper: {\r\n            minWidth: 'auto'\r\n        }\r\n    }\r\n\r\n}));\r\n\r\nconst CustomModal = ({ open, close, children, titleButton, titleButton2, buttonClick }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            maxWidth='xl'\r\n            disableEscapeKeyDown={true}\r\n            onClose={close}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            className={classes.modalWrapper || ''}\r\n        >\r\n            <div className={classes.modalContentWrapper}>\r\n                <div className={classes.close} onClick={close} />\r\n                {children}\r\n                <div className={`${classes.modalButtonBlock} ${titleButton ? classes.modalButtonBlockTwo : ''}`}>\r\n                    {titleButton && <Button onClick={buttonClick}>\r\n                        {titleButton}\r\n                    </Button>}\r\n                    {titleButton2 && <Button onClick={close}>\r\n                        {titleButton2}\r\n                    </Button>}\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nCustomModal.defaultProps = {\r\n    open: false,\r\n    buttonClick: () => { },\r\n    close: () => { }\r\n};\r\n\r\nCustomModal.propTypes = {\r\n    open: PropTypes.bool,\r\n    close: PropTypes.func,\r\n    children: PropTypes.any,\r\n    titleButton: PropTypes.string,\r\n    titleButton2: PropTypes.string,\r\n    buttonClick: PropTypes.func\r\n};\r\n\r\nexport default CustomModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IconButton, Snackbar } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport { MdClose as IconClose } from 'react-icons/md';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    close: {\r\n\r\n    }\r\n}));\r\n\r\nconst Toast = ({ message, onClose }) => {\r\n    const classes = useStyles();\r\n    if (!message) {\r\n        return null;\r\n    }\r\n    return <Snackbar\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        open={true}\r\n        autoHideDuration={6000}\r\n        onClose={onClose}\r\n        ContentProps={{'aria-describedby': 'message-id',}}\r\n        message={<span id=\"message-id\">{I18n.t(message)}</span>}\r\n        action={[\r\n            <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={onClose}\r\n            >\r\n                <IconClose />\r\n            </IconButton>,\r\n        ]}\r\n    />;\r\n}\r\n\r\nToast.defaultProps = {\r\n    message: '',\r\n    onClose: () => { }\r\n};\r\n\r\nToast.propTypes = {\r\n    onClose: PropTypes.func,\r\n    message: PropTypes.string\r\n};\r\n\r\nexport default Toast;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\nimport CustomSelect from '../Components/CustomSelect';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport CustomModal from '../Components/CustomModal';\r\nimport Security from '@material-ui/icons/Security';\r\nimport Toast from '../Components/Toast';\r\n\r\nconst styles = theme => ({\r\n    blockWrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginRight: 20,\r\n        '@media screen and (max-width: 360px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    displayNone: {\r\n        display: 'none !important'\r\n    },\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    blockWrapperCheckbox: {\r\n        display: 'flex',\r\n        flexFlow: 'wrap'\r\n    },\r\n    ipInputStyle: {\r\n        marginTop: 10,\r\n        width: 900,\r\n        marginRight: 20,\r\n        '@media screen and (max-width: 940px)': {\r\n            width: '100%'\r\n        }\r\n    },\r\n    blockWarning: {\r\n        background: '#2196f3',\r\n        color: '#fff',\r\n        margin: '20px 2px',\r\n        padding: 8,\r\n        fontSize: 20\r\n    },\r\n    blockWarningContent: {\r\n        marginBottom: 200,\r\n        flexFlow: 'wrap',\r\n        display: 'flex',\r\n        alignItems: 'flex-end'\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            ipAddressOptions: [],\r\n            certificatesOptions: [],\r\n            usersOptions: [],\r\n            socketioOptions: [\r\n                { title: I18n.t('nothing'), value: 'none' },\r\n                { title: I18n.t('built_in'), value: '' }\r\n            ],\r\n            openModal: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { instance, socket, common: { host } } = this.props;\r\n        const { socketioOptions } = this.state;\r\n        socket.getAdapterInstances('socketio').then(state => {\r\n            this.setState({ socketioOptions: [...socketioOptions, ...state.map(({ _id, common: { name } }) => ({ title: `${name} [${name}.${instance}]`, value: _id }))] })\r\n        }\r\n        );\r\n\r\n        socket.getRawSocket().emit('getHostByIp', host, (err, data) => {\r\n            if (data) {\r\n                let IPs4 = [{ title: `[IPv4] 0.0.0.0 - ${I18n.t('open_ip')}`, value: '0.0.0.0', family: 'ipv4' }];\r\n                let IPs6 = [{ title: '[IPv6] ::', value: '::', family: 'ipv6' }];\r\n                if (data.native.hardware && data.native.hardware.networkInterfaces) {\r\n                    for (let eth in data.native.hardware.networkInterfaces) {\r\n                        if (!data.native.hardware.networkInterfaces.hasOwnProperty(eth)) {\r\n                            continue;\r\n                        }\r\n                        for (let num = 0; num < data.native.hardware.networkInterfaces[eth].length; num++) {\r\n                            if (data.native.hardware.networkInterfaces[eth][num].family !== 'IPv6') {\r\n                                IPs4.push({ title: `[${data.native.hardware.networkInterfaces[eth][num].family}] ${data.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, value: data.native.hardware.networkInterfaces[eth][num].address, family: 'ipv4' });\r\n                            } else {\r\n                                IPs6.push({ title: `[${data.native.hardware.networkInterfaces[eth][num].family}] ${data.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, value: data.native.hardware.networkInterfaces[eth][num].address, family: 'ipv6' });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (let i = 0; i < IPs6.length; i++) {\r\n                    IPs4.push(IPs6[i]);\r\n                }\r\n                this.setState({ ipAddressOptions: IPs4 });\r\n            }\r\n        })\r\n\r\n        socket.getCertificates()\r\n            .then(list =>\r\n                this.setState({ certificatesOptions: list }));\r\n\r\n        socket.getUsers()\r\n            .then(list =>\r\n                this.setState({ usersOptions: list }));\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { native: { auth, secure } } = prevProps;\r\n        const { native: { defaultUser, whiteListSettings }, onChange } = this.props;\r\n        if (!this.props.native.auth && (auth !== this.props.native.auth)) {\r\n            onChange('whiteListSettings.default.user', defaultUser);\r\n        } else if (whiteListSettings && whiteListSettings.default.user !== 'auth' && (auth !== this.props.native.auth)) {\r\n            onChange('whiteListSettings.default.user', 'auth');\r\n        }\r\n        if (defaultUser !== prevProps.native.defaultUser) {\r\n            onChange('whiteListSettings.default.user', defaultUser);\r\n        }\r\n        if (!this.props.native.secure && this.props.native.auth && !this.state.openModal && ((auth !== this.props.native.auth) || (secure !== this.props.native.secure))) {\r\n            this.setState({ openModal: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { instance, common, classes, native, onLoad, onChange } = this.props;\r\n        const { certificatesOptions, ipAddressOptions, usersOptions, openModal, toast, socketioOptions } = this.state;\r\n        let newCommon = JSON.parse(JSON.stringify(common));\r\n        newCommon.icon = newCommon.extIcon;\r\n        return <form className={classes.tab}>\r\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n            <CustomModal\r\n                open={openModal}\r\n                buttonClick={() => {\r\n                    onChange('auth', false);\r\n                    this.setState({ openModal: !openModal });\r\n                    this.setState({ toast: 'Authentication_deactivated' });\r\n                }}\r\n                close={() => this.setState({ openModal: !openModal })}\r\n                titleButton={I18n.t('button_title')}\r\n                titleButton2={I18n.t('button_title2')}>\r\n                <div className={classes.blockWarning}>{I18n.t('Warning')}</div>\r\n                <div className={classes.blockWarningContent}><Security style={{ width: 100, height: 100 }} />{I18n.t('modal_title')}</div>\r\n            </CustomModal>\r\n            <Logo\r\n                instance={instance}\r\n                classes={undefined}\r\n                common={newCommon}\r\n                native={native}\r\n                onError={text => this.setState({ errorText: text })}\r\n                onLoad={onLoad}\r\n            />\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <div>\r\n                    <CustomSelect\r\n                        title='ip'\r\n                        attr='bind'\r\n                        className={classes.ipInputStyle}\r\n                        options={ipAddressOptions}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                    <CustomInput\r\n                        title='port'\r\n                        attr='port'\r\n                        type='number'\r\n                        style={{ marginTop: 5 }}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className={classes.blockWrapperCheckbox}>\r\n                    <div className={classes.blockWrapper}>\r\n                        <CustomCheckbox\r\n                            title='encryption'\r\n                            attr='secure'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            title='authentication'\r\n                            attr='auth'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            className={native['auth'] ? null : classes.displayNone}\r\n                            title='basic_authentication'\r\n                            attr='basicAuth'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            title='cache'\r\n                            attr='cache'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomSelect\r\n                            title='socket'\r\n                            attr='socketio'\r\n                            options={socketioOptions}\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.blockWrapper}>\r\n                        <div className={`${classes.blockWrapperCheckbox} ${native['secure'] ? null : classes.displayNone}`} >\r\n                            <CustomSelect\r\n                                title='public_certificate'\r\n                                attr='certPublic'\r\n                                options={[\r\n                                    { title: I18n.t('nothing'), value: '' }, ...certificatesOptions.filter(({ type }) => type === 'public').map(({ name }) => ({ title: name, value: name }))\r\n                                ]}\r\n                                style={{ marginTop: 10, marginRight: 20 }}\r\n                                native={native}\r\n                                onChange={onChange}\r\n                            />\r\n                            <CustomSelect\r\n                                title='private_certificate'\r\n                                attr='certPrivate'\r\n                                options={[\r\n                                    { title: I18n.t('nothing'), value: '' }, ...certificatesOptions.filter(({ type }) => type === 'private').map(({ name }) => ({ title: name, value: name }))\r\n                                ]}\r\n                                style={{ marginTop: 10, marginRight: 20 }}\r\n                                native={native}\r\n                                onChange={onChange}\r\n                            />\r\n                            <CustomSelect\r\n                                title='chained_certificate'\r\n                                attr='certChained'\r\n                                options={[\r\n                                    { title: I18n.t('nothing'), value: '' }, ...certificatesOptions.filter(({ type }) => type === 'chained').map(({ name }) => ({ title: name, value: name }))\r\n                                ]}\r\n                                style={{ marginTop: 10 }}\r\n                                native={native}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <CustomSelect\r\n                            className={!native['auth'] ? null : classes.displayNone}\r\n                            title='users'\r\n                            attr='defaultUser'\r\n                            options={usersOptions.map(({ _id, common: { name } }) => ({ title: name, value: _id.replace('system.user.', '') }))}\r\n                            style={{ marginTop: 10, width: 300 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomInput\r\n                            className={native['auth'] ? null : classes.displayNone}\r\n                            title='time_out'\r\n                            attr='ttl'\r\n                            type='number'\r\n                            style={{ marginTop: -1, width: 300 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            title='simple_api'\r\n                            attr='simpleapi'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                        <CustomCheckbox\r\n                            className={native['socketio'] === '' ? null : classes.displayNone}\r\n                            title='web_sockets'\r\n                            attr='forceWebSockets'\r\n                            style={{ marginTop: 10 }}\r\n                            native={native}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ClickAwayListener, Fab, makeStyles, Tooltip } from '@material-ui/core';\r\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst useStyles = makeStyles(({ name }) => ({\r\n    colorTheme: {\r\n        color: name === 'dark' ? '#a2a2a2;' : '#c0c0c0',\r\n        backgroundColor: name === 'dark' ? '#ffffff00' : '#ffffff'\r\n    }\r\n}));\r\n\r\nconst HintComponent = ({ children, openLink, style }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useStyles();\r\n    return (\r\n        <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n            <Tooltip\r\n                arrow\r\n                placement=\"top\"\r\n                title={I18n.t(children)}\r\n                interactive\r\n                open={open}\r\n                onOpen={() => setOpen(true)}\r\n            >\r\n                <Fab\r\n                    className={classes.colorTheme}\r\n                    style={Object.assign({\r\n                        boxShadow: 'none',\r\n                        marginLeft: 10,\r\n                        width: 20,\r\n                        height: 20,\r\n                        minHeight: 20,\r\n                    }, style)}\r\n                    size=\"small\" aria-label=\"like\"\r\n                    onClick={() => {\r\n                        setOpen(!open);\r\n                        openLink();\r\n                    }}\r\n                >\r\n                    <HelpOutlineOutlinedIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nHintComponent.propTypes = {\r\n    children: PropTypes.string,\r\n    openLink: PropTypes.func,\r\n    style: PropTypes.object\r\n};\r\n\r\nHintComponent.defaultProps = {\r\n    children: 'link',\r\n    openLink: () => { },\r\n    style: {}\r\n};\r\n\r\nexport default HintComponent;","export default __webpack_public_path__ + \"static/media/le.eb63b1db.png\";","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport HintComponent from '../Components/HintComponent';\r\nimport logo from '../assets/le.png';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)'\r\n    },\r\n    logoWidth: {\r\n        width: 200\r\n    },\r\n    fontSize: {\r\n        '@media screen and (max-width: 460px)': {\r\n            '& > *': {\r\n                fontSize: '3.2vw',\r\n            }\r\n        }\r\n    }\r\n\r\n});\r\n\r\nclass Certificates extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            ipAddressOptions: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange, common: { readme } } = this.props;\r\n        return <form className={classes.tab}>\r\n            <img className={classes.logoWidth} alt='logo' src={logo} />\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <div>\r\n                    <CustomCheckbox\r\n                        title='use_certificates'\r\n                        attr='leEnabled'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                    <HintComponent openLink={() =>\r\n                        window.open(`${readme}#lets-encrypt-certificates`, '_blank')} />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='renew_certificates'\r\n                        attr='leUpdate'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leUpdate'] && native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomInput\r\n                        title='domain_name'\r\n                        attr='lePort'\r\n                        type='number'\r\n                        style={{ marginTop: -1 }}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='use_lets'\r\n                        attr='leStaging'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nCertificates.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Certificates);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport CustomSelect from '../Components/CustomSelect';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Toast from '../Components/Toast';\r\n\r\nconst styles = ({ name }) => ({\r\n    backgroundTheme: {\r\n        background: name === 'dark' ? '#3e3838' : '#dcdcdc'\r\n    },\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n        marginBottom: 40,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top'\r\n    },\r\n    columnSettings: {\r\n        width: '100%',\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n        '& td': {\r\n            padding: 2\r\n        }\r\n    },\r\n    displayNone: {\r\n        display: 'none'\r\n    },\r\n    checkBoxStyle: {\r\n        marginLeft: 0,\r\n        marginRight: 0\r\n    },\r\n    miniTable: {\r\n        display: 'none'\r\n    },\r\n    card: {\r\n        padding: 1,\r\n        margin: '20px 0',\r\n        border: '1px solid',\r\n        borderRadius: 10,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    '@media screen and (max-width: 1700px)': {\r\n        table: {\r\n            '& th': {\r\n                padding: 2\r\n            }\r\n        }\r\n    },\r\n    '@media screen and (max-width: 1280px)': {\r\n        miniTable: {\r\n            display: 'block'\r\n        },\r\n        maxTable: {\r\n            display: 'none'\r\n        },\r\n        table: {\r\n            minWidth: 300\r\n        },\r\n        miniTableSelect: {\r\n            minWidth: 185\r\n        }\r\n    }\r\n});\r\n\r\nconst baseObj = {\r\n    user: 'admin',\r\n    object: {\r\n        read: true,\r\n        list: true,\r\n        write: true,\r\n        delete: true\r\n    },\r\n    state: {\r\n        read: true,\r\n        list: true,\r\n        write: true,\r\n        create: true,\r\n        delete: true\r\n    },\r\n    file: {\r\n        read: true,\r\n        list: true,\r\n        write: true,\r\n        create: true,\r\n        delete: true\r\n    }\r\n}\r\nclass WhiteList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            usersOptions: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { socket } = this.props;\r\n        socket.getUsers()\r\n            .then(list =>\r\n                this.setState({ usersOptions: list }));\r\n    }\r\n\r\n    tableSelect(el, style) {\r\n        const { classes, native, onChange } = this.props;\r\n        const { usersOptions } = this.state;\r\n        const { whiteListSettings } = native;\r\n        if (el === 'default') {\r\n            return whiteListSettings[el].user;\r\n        }\r\n        const optionsSelect = whiteListSettings.default.user === 'auth' ? [{ title: 'auth', value: 'auth' }] : [];\r\n        return <CustomSelect\r\n            table\r\n            value={whiteListSettings[el].user}\r\n            options={[...optionsSelect, ...usersOptions.map(({ _id, common: { name} }) => ({ title: name, value: _id.replace('system.user.', '') }))]}\r\n            native={native}\r\n            style={style}\r\n            className={classes.miniTableSelect}\r\n            onChange={(e) => {\r\n                const newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                newObj[el].user = e;\r\n                onChange('whiteListSettings', newObj);\r\n            }}\r\n        />\r\n    }\r\n\r\n    tableInput(el, style) {\r\n        const { native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n        if (el === 'default') {\r\n            return el;\r\n        }\r\n        return <CustomInput\r\n            table\r\n            value={el}\r\n            style={style}\r\n            onChange={(e) => {\r\n                const copyObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                let newObj = {};\r\n                Object.keys(copyObj).forEach(keyObj => {\r\n                    if (keyObj === el) {\r\n                        newObj[e] = copyObj[keyObj];\r\n                    } else {\r\n                        newObj[keyObj] = copyObj[keyObj];\r\n                    }\r\n                });\r\n                if (!this.validateIp(e)) {\r\n                    this.setState({ toast: 'incorrect_ip' });\r\n                } else {\r\n                    onChange('whiteListSettings', newObj);\r\n                }\r\n            }}\r\n        />\r\n    }\r\n\r\n    buttonAdd() {\r\n        const { native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n        return <IconButton color=\"primary\" onClick={() => {\r\n            let newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n            let number = 1;\r\n            let newKey = '192.168.0.1';\r\n            const addProperty = () => {\r\n                if (Object.keys(newObj).find(keySearch => keySearch === newKey)) {\r\n                    newKey = `192.168.0.${number}`;\r\n                    number = number + 1;\r\n                    addProperty();\r\n                }\r\n            }\r\n            addProperty();\r\n            newObj = Object.assign({ [newKey]: baseObj }, newObj);\r\n            onChange('whiteListSettings', newObj);\r\n        }}>\r\n            <AddCircleIcon />\r\n        </IconButton>\r\n    }\r\n\r\n    buttonRemove(el) {\r\n        const { native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n        return <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n                const copyObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                delete copyObj[el];\r\n                onChange('whiteListSettings', copyObj);\r\n            }}\r\n            style={el === 'default' ? { display: 'none' } : null}\r\n            aria-label=\"delete\"\r\n        >\r\n            <DeleteIcon />\r\n        </IconButton>\r\n    }\r\n\r\n    validateIp(ip) {\r\n        if (ip.indexOf('*') !== -1 && ip.lastIndexOf('.') > ip.indexOf('*')) {\r\n            return false;\r\n        }\r\n        let expression = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/;\r\n        return expression.test(ip.replace('*', '111'));\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange } = this.props;\r\n        const { whiteListSettings } = native;\r\n        const { toast } = this.state;\r\n        const tableHeadArr = ['to_read', 'list', 'write', 'delete', 'to_read', 'list', 'write', 'to_create', 'delete', 'to_read', 'list', 'write', 'to_create', 'delete'];\r\n        return <form className={classes.tab}>\r\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n            <div style={{ position: 'relative' }} className={`${classes.column} ${classes.columnSettings}`}>\r\n                <div>\r\n                    <CustomCheckbox\r\n                        title='included'\r\n                        attr='whiteListEnabled'\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                {whiteListSettings ? <div className={native['whiteListEnabled'] ? null : classes.displayNone}>\r\n                    <TableContainer style={{ overflowX: 'visible' }} component={Paper}>\r\n                        <Table className={`${classes.table} ${classes.maxTable}`} aria-label=\"spanning table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" rowSpan={2}>{this.buttonAdd()}</TableCell>\r\n                                    <TableCell align=\"center\" rowSpan={2} style={{ fontWeight: 'bold' }}>IP</TableCell>\r\n                                    <TableCell align=\"center\" rowSpan={2} style={{ fontWeight: 'bold' }}>{I18n.t('user')}</TableCell>\r\n                                    <TableCell align=\"center\" colSpan={4} style={{ fontWeight: 'bold' }}>{I18n.t('object')}</TableCell>\r\n                                    <TableCell align=\"center\" colSpan={5} style={{ fontWeight: 'bold' }}>{I18n.t('status')}</TableCell>\r\n                                    <TableCell align=\"center\" colSpan={5} style={{ fontWeight: 'bold' }}>{I18n.t('file')}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    {tableHeadArr.map((el, index) =>\r\n                                        <TableCell key={`${el}_${index}_max`} align=\"center\">{I18n.t(el)}</TableCell>)}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {Object.keys(whiteListSettings).map((el, index) => {\r\n                                    return <TableRow key={`${index}_max`}>\r\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\r\n                                            {this.buttonRemove(el)}\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\r\n                                            {this.tableInput(el, { marginTop: -1, minWidth: 150, paddingTop: 5 })}\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\r\n                                            {this.tableSelect(el, { marginTop: -1 })}\r\n                                        </TableCell>\r\n                                        {['object', 'state', 'file'].map((elProperty, indexProperty) => Object.keys(whiteListSettings[el][elProperty]).map((attr, index) =>\r\n                                            <TableCell className={Boolean(indexProperty % 2) ? classes.backgroundTheme : null} style={{ borderBottom: Boolean(indexProperty % 2) ? '1px solid #afafaf' : null }} key={`${elProperty}_${attr}_max`} align=\"center\">\r\n                                                <CustomCheckbox\r\n                                                    table\r\n                                                    checked={whiteListSettings[el][elProperty][attr]}\r\n                                                    attr={attr}\r\n                                                    native={native}\r\n                                                    className={classes.checkBoxStyle}\r\n                                                    onChange={(e) => {\r\n                                                        const newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                                                        newObj[el][elProperty][attr] = e;\r\n                                                        onChange('whiteListSettings', newObj);\r\n                                                    }}\r\n                                                />\r\n                                            </TableCell>))}\r\n                                    </TableRow>\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <div className={classes.miniTable}>\r\n                            <div className={classes.backgroundTheme} style={{ position: 'sticky', top: -10, left: 12, zIndex: 22, borderBottom: '1px solid' }}>\r\n                                {this.buttonAdd()}\r\n                            </div>\r\n                            <div>\r\n                                {Object.keys(whiteListSettings).map((el, index) => {\r\n                                    return <div\r\n                                        key={`${index}_wrapper`}\r\n                                        className={`${classes.card} ${Boolean(index % 2) ? classes.backgroundTheme : null}`}\r\n                                    >\r\n                                        <div style={{ width: '100%', lineHeight: '30px', textAlign: 'center' }}>\r\n                                            <span>{this.buttonRemove(el)}</span>\r\n                                            <span style={{ marginLeft: 10 }}>IP: {this.tableInput(el, { marginTop: -5, minWidth: 150, marginLeft: 5, verticalAlign: 'middle' })}</span>\r\n                                            <span style={{ marginLeft: 20 }}>{I18n.t('user')}: {this.tableSelect(el, { marginTop: -10, marginLeft: 5, verticalAlign: 'middle' })}</span>\r\n                                        </div>\r\n                                        {['object', 'state', 'file'].map((element, indexEl) => {\r\n                                            let newTableHeadArr = [...tableHeadArr].splice(indexEl === 0 ? 0 : 4, indexEl === 0 ? 4 : 5)\r\n                                            return <Table key={`${indexEl}_mini`} className={classes.table} style={{ width: 'inherit' }} aria-label=\"spanning table\">\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell style={{ background: '#bbbbbb' }} align=\"center\" colSpan={Object.keys(whiteListSettings[el][element]).length}>\r\n                                                            {I18n.t(['object', 'status', 'file'][indexEl])}</TableCell>\r\n                                                    </TableRow>\r\n                                                    <TableRow>\r\n                                                        {newTableHeadArr.map((elhed, ind) => (<TableCell key={`${elhed}_${ind}_mini`} align=\"center\">\r\n                                                            {I18n.t(elhed)}</TableCell>))}\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    <TableRow>\r\n                                                        {Object.keys(whiteListSettings[el][element]).map((attr) =>\r\n                                                            <TableCell key={`${element}_${attr}_mini_check`} align=\"center\">\r\n                                                                <CustomCheckbox\r\n                                                                    table\r\n                                                                    checked={whiteListSettings[el][element][attr]}\r\n                                                                    attr={attr}\r\n                                                                    native={native}\r\n                                                                    className={classes.checkBoxStyle}\r\n                                                                    onChange={(e) => {\r\n                                                                        const newObj = JSON.parse(JSON.stringify(whiteListSettings));\r\n                                                                        newObj[el][element][attr] = e;\r\n                                                                        onChange('whiteListSettings', newObj);\r\n                                                                    }}\r\n                                                                />\r\n                                                            </TableCell>)}\r\n                                                    </TableRow>\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        })}</div>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </TableContainer>\r\n                </div> : null}\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nWhiteList.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(WhiteList);\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TextField } from '@material-ui/core';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst CustomButtonUpload = ({ title, onChange }) => {\r\n    const classes = useStyles();\r\n    const [valueFileUpload, setValueFileUpload] = useState('');\r\n    return <div className={classes.root}>\r\n        <input\r\n            accept=\"image/*\"\r\n            className={classes.input || ''}\r\n            id=\"contained-button-file\"\r\n            multiple\r\n            type=\"file\"\r\n            onChange={(e) => {\r\n                onChange(e.target.files[0] || e.dataTransfer.files[0], name =>\r\n                    setValueFileUpload(name));\r\n            }}\r\n        />\r\n        <label htmlFor=\"contained-button-file\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                {I18n.t(title)}\r\n            </Button>\r\n            <TextField style={{ marginLeft: 20 }} value={valueFileUpload} />\r\n        </label>\r\n    </div>;\r\n}\r\n\r\nexport default CustomButtonUpload;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport CustomInput from '../Components/CustomInput';\r\nimport CustomButtonUpload from '../Components/CustomButtonUpload';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Dropzone from 'react-dropzone';\r\nimport Toast from '../Components/Toast';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    dropZone: {\r\n        marginTop: 30,\r\n        width: 600,\r\n        border: '2px dashed #bbb',\r\n        borderRadius: 5,\r\n        padding: 25,\r\n        textAlign: 'center',\r\n        fontSize: '20pt',\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Arial',\r\n        color: '#bbb',\r\n        minWidth: 320,\r\n        minHeight: 200,\r\n        transition: 'background 1s',\r\n        '&:focus': {\r\n            outline: 'inherit'\r\n        }\r\n    },\r\n    dropZoneActive: {\r\n        background: '#d6d6d69c'\r\n    },\r\n    imgStyle: {\r\n        maxWidth: 500,\r\n        maxHeight: 500\r\n    },\r\n    '@media screen and (max-width: 680px)': {\r\n        dropZone: {\r\n            width: 'calc(100% - 45px)',\r\n            minWidth: 200,\r\n        },\r\n        imgStyle: {\r\n            width: '100%',\r\n        }\r\n    }\r\n});\r\n\r\nclass Background extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imgSRC: '',\r\n            toast: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readFile();\r\n    }\r\n\r\n    readFile() {\r\n        const { socket, instance } = this.props;\r\n\r\n        socket.getRawSocket().emit('readFile', `web.${instance}`, 'login-bg.png', (err, data) => {\r\n            if (!err && data) {\r\n                let arrayBufferView = new Uint8Array(data);\r\n                if (!arrayBufferView.length) {\r\n                    this.setState({ imgSRC: `../../files/web.${instance}/login-bg.png?ts=` + Date.now() });\r\n                } else {\r\n                    let blob = new Blob([arrayBufferView], { type: 'image/png' });\r\n                    let urlCreator = window.URL || window.webkitURL;\r\n                    let imgSRC = urlCreator.createObjectURL(blob);\r\n                    this.setState({ imgSRC });\r\n                }\r\n            } else {\r\n                this.setState({ imgSRC: '' });\r\n            }\r\n        });\r\n    }\r\n\r\n    uploadFile(file, callback) {\r\n        const { socket, instance } = this.props;\r\n        if (!file) return;\r\n        if (file.size > 5 * 1024 * 1024) {\r\n            this.setState({ toast: `File ${file.name} is too big. Maximum 5MB` });\r\n            this.setState({ imgSRC: '' });\r\n            callback && callback('');\r\n            return;\r\n        }\r\n        let reader = new FileReader();\r\n        reader.onload = ({ target: { result } }) => {\r\n            socket.getRawSocket().emit('writeFile', `web.${instance}`, 'login-bg.png', result, () => {\r\n                this.readFile();\r\n            });\r\n        };\r\n        callback && callback(file.name);\r\n        reader.readAsArrayBuffer(file);\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange } = this.props;\r\n        const { imgSRC, toast } = this.state;\r\n        return <form className={classes.tab}>\r\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <div>\r\n                    <CustomInput\r\n                        styleComponentBlock={{ height: 20, display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n                        component={<CustomInput\r\n                            attr='loginBackgroundColorHelper'\r\n                            type='color'\r\n                            style={{ marginTop: -1, marginLeft: 10, minWidth: 60 }}\r\n                            native={native}\r\n                            onChange={async (e, value) => {\r\n                                await onChange('loginBackgroundColorHelper', value);\r\n                                await onChange('loginBackgroundColor', value);\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                        />}\r\n                        title='color'\r\n                        attr='loginBackgroundColor'\r\n                        style={{ marginTop: -1, marginBottom: 20 }}\r\n                        native={native}\r\n                        onChange={async (e, value) => {\r\n                            await onChange('loginBackgroundColorHelper', value);\r\n                            await onChange('loginBackgroundColor', value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <CustomCheckbox\r\n                        title='background_image'\r\n                        attr='loginBackgroundImage'\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['loginBackgroundImage'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <div>\r\n                        <CustomButtonUpload\r\n                            title=\"upload_image\"\r\n                            attr=\"files\"\r\n                            native={native}\r\n                            onChange={(e, callback) => this.uploadFile(e, callback)}\r\n                        />\r\n                    </div>\r\n                    <Dropzone\r\n                        accept=\"image/*\"\r\n                        onDrop={acceptedFiles => this.uploadFile(acceptedFiles[0])}>\r\n                        {({ getRootProps, getInputProps, isDragActive }) => (\r\n                            <section>\r\n                                <div\r\n                                    className={`${classes.dropZone} ${isDragActive ? classes.dropZoneActive : null}`}\r\n                                    {...getRootProps()}>\r\n                                    <input {...getInputProps()}/>\r\n                                    <p>{I18n.t('place_the_files_here')}</p>\r\n                                    {imgSRC ? <img className={classes.imgStyle} src={imgSRC} alt=\"img\" /> : null}\r\n                                </div>\r\n                            </section>\r\n                        )}\r\n                    </Dropzone>\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nBackground.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Background);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport CustomCheckbox from '../Components/CustomCheckbox';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)'\r\n    },\r\n    fontSize: {\r\n        '@media screen and (max-width: 460px)': {\r\n            '& > *': {\r\n                fontSize: '3.2vw',\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nclass Additionally extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toast: '',\r\n            ipAddressOptions: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { classes, native, onChange } = this.props;\r\n        return <form className={classes.tab}>\r\n            <div className={`${classes.column} ${classes.columnSettings}`}>\r\n                <h4>\r\n                {I18n.t('disable_default')}\r\n                </h4>\r\n                <p>\r\n                {I18n.t('warning_incorrectly')}\r\n                </p>\r\n                <div>\r\n                    <CustomCheckbox\r\n                        title='disable_extensions'\r\n                        attr='disableExtensions'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='disable_states'\r\n                        attr='disableStates'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\r\n                    <CustomCheckbox\r\n                        title='disable_files'\r\n                        attr='disableFilesObjects'\r\n                        className={classes.fontSize}\r\n                        native={native}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>;\r\n    }\r\n}\r\n\r\nAdditionally.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Additionally);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Options from './Tabs/Options';\r\nimport Certificates from './Tabs/Certificates';\r\nimport WhiteList from './Tabs/WhiteList';\r\nimport Background from './Tabs/Background';\r\nimport Additionally from './Tabs/Additionally';\r\nimport Toast from './Components/Toast';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nconst arrayTabName = [{\r\n    name: 'options',\r\n    translate: 'main_settings',\r\n    index: 0\r\n}, {\r\n    name: 'certificates',\r\n    translate: 'certificates',\r\n    index: 1\r\n}, {\r\n    name: 'whiteList',\r\n    translate: 'whiteList',\r\n    index: 2\r\n}, {\r\n    name: 'additionally',\r\n    translate: 'additionally',\r\n    index: 3\r\n}, {\r\n    name: 'background',\r\n    translate: 'background',\r\n    index: 4\r\n}]\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = { ...props };\r\n        extendedProps.encryptedFields = ['pass'];\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const { selectedTab } = this.state;\r\n        const tab = selectedTab;\r\n        if (tab) {\r\n            return arrayTabName.find((el) => el.name === tab)?.index || 0;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    onPrepareSave(settings) {\r\n        super.onPrepareSave(settings);\r\n        const { secure, certPublic, certPrivate } = this.state.native;\r\n        if (secure && (!certPrivate || !certPublic)) {\r\n            this.setState({ toast: 'set_certificates' });\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    renderTab() {\r\n        const { selectedTab, native } = this.state;\r\n        switch (selectedTab) {\r\n            case 'certificates':\r\n                return <Certificates\r\n                    key=\"certificates\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'whiteList':\r\n                return <WhiteList\r\n                    key=\"whiteList\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'background':\r\n                return <Background\r\n                    key=\"background\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'additionally':\r\n                return <Additionally\r\n                    key=\"additionally\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n\r\n            case 'options':\r\n            default:\r\n                return <Options\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={native}\r\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\r\n                    instance={this.instance}\r\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\r\n                    adapterName={this.adapterName}\r\n                />;\r\n        }\r\n    }\r\n\r\n    checkDisabledTabs(nameTab) {\r\n        const { native } = this.state;\r\n        return (!native['auth'] && nameTab === 'background') || (!native['secure'] && nameTab === 'certificates');\r\n    }\r\n\r\n    render() {\r\n        const { loaded, theme, themeType, toast } = this.state;\r\n        const { classes } = this.props;\r\n        if (!loaded) {\r\n            return <MuiThemeProvider theme={theme}>\r\n                <Loader theme={themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\r\n                <div className=\"App\" style={{ background: theme.palette.background.default, color: theme.palette.text.primary }}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs value={this.getSelectedTab()} onChange={(e, index) => {\r\n                            this.selectTab(arrayTabName.find((el) => el.index === index)?.name || arrayTabName[0].name, index)\r\n                        }} scrollButtons=\"auto\">\r\n                            {arrayTabName.map((el, index) => (<Tab key={`${index}-tab-key`} disabled={this.checkDisabledTabs(el.name)} label={I18n.t(el.translate)} data-name={el.name} />))}\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <div className={this.isIFrame ? classes.tabContentIFrame : classes.tabContent}>\r\n                        {this.renderTab()}\r\n                    </div>\r\n                    {this.renderError()}\r\n                    {this.renderSaveCloseButtons()}\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'web';\r\nlet themeName = Utils.getThemeName();\r\n\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}